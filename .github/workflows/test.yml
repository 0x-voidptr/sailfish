name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable
          - os: macos-latest
            target: x86_64-apple-darwin
            toolchain: stable
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            toolchain: stable
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: beta
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: 1.42.0 # MSRV
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: nightly
          - os: ubuntu-latest
            deps: sudo apt update ; sudo apt install gcc-multilib
            target: i686-unknown-linux-gnu
            toolchain: nightly

    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - run: ${{ matrix.deps }}
      - name: Test sailfish
        run: |
          cargo test --target ${{ matrix.target }} --manifest-path sailfish/Cargo.toml --no-default-features
          cargo test --target ${{ matrix.target }} --manifest-path sailfish/Cargo.toml --all-features
      - name: Test sailfish-compiler
        run: |
          cargo test --target ${{ matrix.target }} --manifest-path sailfish-compiler/Cargo.toml
      - name: Integration tests
        # Currently integration tests have some issue related to line feeds
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cargo test --target ${{ matrix.target }} --manifest-path sailfish-tests/integration-tests/Cargo.toml

  test-miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        run: |
          MIRI_NIGHTLY=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)
          rustup default "$MIRI_NIGHTLY"
          rustup component add miri
      - name: Test sailfish
        run: |
          cargo miri test --manifest-path sailfish/Cargo.toml --no-default-features
          cargo miri test --manifest-path sailfish/Cargo.toml --all-features

  test-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: nightly
            target: aarch64-apple-ios
            override: true
      - name: Build only
        run: cargo build --target=aarch64-apple-ios --workspace

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        run: |
          rustup default nightly
          rustup component add miri
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: x86_64-unknown-linux-gnu
          toolchain: nightly
          override: true
      - name: Install grcov
        run: curl -L https://github.com/mozilla/grcov/releases/download/v0.6.1/grcov-linux-x86_64.tar.bz2 | tar jxf -
      - name: Install rust-covfix
        run: |
          curl -L https://github.com/Kogia-sima/rust-covfix/releases/download/v0.2.1/rust-covfix-linux-x86_64.tar.xz |tar Jxf -
          mv rust-covfix-linux-x86_64/rust-covfix ./
      - name: Test all crates
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -C panic=abort
          RUSTDOCFLAGS: -C panic=abort
        run: |
          cargo build --all-features --workspace
          cargo test --all-features --workspace
      - name: collect coverages
        run: |
          zip -0 ccov.zip `find . \( -name "sailfish*.gc*" -o -name "integration-tests*.gc*" \) -print`
          ./grcov ccov.zip --llvm --branch -t lcov -o lcov.info --ignore "/*" --ignore "sailfish-tests/*"
      - name: fix coverages
        run: ./rust-covfix -o lcov.info lcov.info
      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
